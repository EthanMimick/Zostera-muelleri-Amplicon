BiocManager::install("phyloseq")
install.packages("vegan")
install.packages("dendextend")
install_github("kassambara/ggpubr")
BiocManager::install("ANCOMBC")
BiocManager::install("microbiome")
install.packages("eulerr")
install_github("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
library(tidyverse) ; packageVersion("tidyverse") # 1.3.2
library(phyloseq) ; packageVersion("phyloseq") # 1.42.0
library(vegan) ; packageVersion("vegan") # 2.6.4
library(dendextend) ; packageVersion("dendextend") # 1.16.0
library(viridis) ; packageVersion("viridis") # 0.6.2
library("pairwiseAdonis"); packageVersion("pairwiseAdonis") # 0.4
library(ggpubr)
library(ANCOMBC)
library(microbiome)
library(eulerr)
library(phyloseq)
citation("ggpubr")
setwd("Path to output files from dada2")

#uploading your taxonomy and count data
asv_tab = read.delim("ASVs_counts_Seagrass_16s_v2.tsv", sep = "\t")
asv_tax = read.delim("ASVs_taxonomy_GSR.csv", sep=",")
asv_tax = select(asv_tax,c("asv_names":"Species"))
#export fixed csv
write.csv(asv_tax, "ASVs_taxonomy_GSR.csv") 
#need to construct around your data using your metadata table from Run Selector
sample_info_tab = read.csv("Seagrass_16s_v2_metadata.csv")
sample_info_tab$Site <- as.factor(sample_info_tab$Site)
#need to make columns the rownames all of them
#need to figure out what the row names are for all your data, likely if you followed the tutorial the tax and tab are "X")
#for your sample data file the first row needs to be the SRR that is listed in your ASV files
asv_tab = asv_tab %>% tibble::column_to_rownames("X")
asv_tax = asv_tax %>% tibble::column_to_rownames("asv_names")
sample_df = sample_info_tab %>% tibble::column_to_rownames("Run")



#transforming your taxonomy data into a matrix for entry into phyloseq
asv_mat = as.matrix(asv_tab)
tax_mat = as.matrix(asv_tax)

#transform into phyloseq objects
asv = otu_table(asv_mat, taxa_are_rows=T)
tax=tax_table(tax_mat)
samples=sample_data(sample_df)


#make a phyloseq object
phy = phyloseq(asv, tax, samples)

#remove chloroplast and mitochondria from your phyloseq object
phy <- phy %>% subset_taxa( Family!= "mitochondria" | is.na(Family) & Order!="Chloroplast" | is.na(Order) ) 

#number of taxa
ntaxa(phy)

#number of samples
nsamples(phy)

#number of variables
sample_variables(phy)
#[4] "lat_lon"              "Library.Name"         "microenvironment"    
#[7] "Sample.Name"          "Site"                 "source_material_id"  
#[10] "technical_replicate"  "tissue"  
#Subsetted Phyloseq objects based on site
phy_rb <- subset_samples(phy, Site == "rb")
phy_lm <- subset_samples(phy, Site == "lm")
#plotting richness, be sure to change x and color by what you're trying to evaluate
plot_richness(phy, x="Site",color = "tissue", measure=c("Chao1")) +
  geom_boxplot(alpha=0.2)

#if you want to show what is significant and then what you want to compare
symnum.args = list(cutpoints = c(0, 0.0001, 0.001, 0.01, 0.05, 1), symbols = c("****", "***", "**", "*", "ns"))
comparisons_material = list(c("a", "d"),c("a","h"),c("d","h"))
comparisons_material_site = list(c("rb", "lm"))
#then rerun richness
sim<-plot_richness(phy, x="tissue",color = "tissue", measure=c("Chao1","Simpson","Shannon")) +
  geom_boxplot(alpha=0.2)+
  stat_compare_means(method = "wilcox.test", comparisons = comparisons_material, label = "p.signif", symnum.args = symnum.args)
sim_site<-plot_richness(phy, x="Site",color = "Site", measure=c("Chao1","Simpson","Shannon")) +
  geom_boxplot(alpha=0.2)+
  stat_compare_means(method = "wilcox.test", comparisons = comparisons_material_site, label = "p.signif", symnum.args = symnum.args)
#quantify alpha diversity
tis_adiv_Chao1 <- estimate_richness(phy,measure=c("Chao1"))
d = sample_data(phy)
associated = tis_adiv_Chao1[d[,'tissue'] == 'a',]
healthy = tis_adiv_Chao1[d[,'tissue'] == 'h',]
#wilcox.test
dif_h_a <-wilcox.test(associated$Chao1,healthy$Chao1)
# Indicies "Chao1.Shannon,Simpson"
#make a stacked barplot of the data at the phylum level
phy_phylum = tax_glom(phy, taxrank = "Phylum",NArm=FALSE)
rel_abund_phylum = phyloseq::transform_sample_counts(phy_phylum,
                                                           function(x){x / sum(x)})
Phylun_bar <- phyloseq::plot_bar(rel_abund_phylum, fill = "Phylum")+
  geom_bar(aes(color = phylum, fill = Phylum), stat = "identity", position = "stack", color = "black") +
  labs(x = "", y = "Relative Abundance\n") +
  facet_wrap(~ Site , scales = "free") +
  theme(panel.background = element_blank()) +
  theme(axis.text.x=element_blank(),
        axis.ticks.x=element_blank(),
        legend.text = element_text(size = 7),
        legend.title = element_text(size = 12))

#find the core members of the microbiome
#convert to relative abundance
pseq_rel = microbiome::transform(phy, "compositional")

#make a variable for all of the conditions you want to compare
stuff_tissue = unique(as.character(meta(phy)$tissue))
#make a for loop to go through each bit of "stuff" one by one and combine identified core taxa into a list
list_core_tissue <- c() # an empty object to store information
for (n in stuff_tissue){ # for each variable n in stuff
  #print(paste0("Identifying Core Taxa for ", n))
  
  ps.sub_tissue <- subset_samples(pseq_rel, stuff_tissue== n) # Choose sample from DiseaseState by n
  
  core_m_tissue <- core_members(ps.sub_tissue, # ps.sub is phyloseq selected with only samples from g 
                         detection = 0.001, # 0.001 in atleast 90% samples 
                         prevalence = 0.10) #prevelence really matters--how much of the sample can it make upt 
  print(paste0("No. of core taxa in ", n, " : ", length(core_m_tissue))) # print core taxa identified in each DiseaseState.
  list_core_tissue[[n]] <- core_m_tissue # add to a list core taxa for each group.
}
#can also make a list of your factors and the color to give to each
#list of all your factors with the color to asign to each 
mycols = c(d="#d6e2e9", a="#cbf3f0", h="#fcf5c7") 
plot(venn(list_core_tissue),
     fills = mycols)

#do the same for site
stuff_site = unique(as.character(meta(phy)$Site))
list_core_site <- c() 
for (n in stuff_site){
  ps.sub_site <- subset_samples(pseq_rel, stuff_site== n) 
  core_m_site <- core_members(ps.sub_site, detection = 0.001, prevalence = 0.10)
  print(paste0("No. of core taxa in ", n, " : ", length(core_m_site)))
  list_core_site[[n]] <- core_m_site }
print(list_core_site)

mycols_site = c(rd="#fcf5c7", lm="#cbf3f0") 
plot(venn(list_core_site),
     fills = mycols_site)
#make a pcoa to visulize microbiome clustering
phy_clr = microbiome::transform(phy, 'clr')
phy_ord = ordinate(phy_clr, "PCoA", "euclidean")
PCoA<- plot_ordination(phy,phy_ord, color="tissue",shape = "Site")

#Test whether the tissue types and site differ significantly from each other using the permutational ANOVA 
dist.uf<- phyloseq::distance(phy_clr, method = "euclidean")
PWA_Site <-pairwise.adonis(t(otu_table(phy_clr)), sample_data(phy_clr)$Site, sim.method = "euclidean",
                             p.adjust.m = "bonferroni")
PWA_tissue <-pairwise.adonis(t(otu_table(phy_clr)), sample_data(phy_clr)$tissue, sim.method = "euclidean",
                           p.adjust.m = "bonferroni")
#making heatmaps for the different sites (not in paper but could be used in analysis)
rb_heatmap<-plot_heatmap(phy_rb, taxa.label = "Genus",sample.label = "tissue",title = "Rose Bay")
lm_heatmat<-plot_heatmap(phy_lm, taxa.label = "Genus",sample.label = "tissue",title = "Lake Macquarie")
ggarrange(rb_heatmap,lm_heatmat,nrow = 2)
